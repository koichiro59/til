//デベロッパーツールに関して
〇要素(Elements)
・htmlやcssが記載されている。
・HTMLはツリー構造で表示され、CSSは適用されているスタイルが優先度順に表示される
〇コンソール(Console)
・ログに記録されたメッセージの表示
-コードが正しい順序で実行されているかの確認や変数の値の検査をするために行われる。
・JavaScriptの実行
〇ソース(Sources)
・ファイルの表示
・CSSとJavaScriptの編集
・JacvaScriptのスニペットを作成と保存
・JavaScriptのデバッグ
〇ネットワーク(Network)
ブラウザが実行した通信ログを確認する機能。URLをクリックした時のリクエストや画像の読み込み、JavaScriptやCSSの持ち込み、使用した時間、各通信のレスポンなどを確認できる。
〇ヘッダー
・HTTPレスポンス/リクエストに関するメタデータが含まれる。
・メタデータではHTTPメソッドやステータスコードなどの設定に関する情報が記載されている。
〇SVG形式
・画像データの一種で、ベクター形式のデータ(jpegやpngはラスタ形式)
-ベクター形式は点、線、曲線、図形などの幾何学的要素を数学的な式で表現している。
-ラスタ形式はピクセルと呼ばれる微小な点のグリッドで画像を表現している。
ベクター形式のデータは拡大、縮小しても画質が劣化しないためロゴやアイコンなどに使われる。
〇ペイロード
・通信プロトコルにおいてヘッダー以外の実際のデータをペイロードという。
・記載されいてるデータには、jsonや画像などのデータがある。
〇プレビュー
・HTTPレスポンスの内容を視覚的に表現したものをプレビューという。
・jsonデータなどを階層構造に表現し、直感的に確認できるようにしている。
〇レスポンス
・プレビューと違い、HTTPレスポンスの内容をそのまま(生データ)で表示している。
//vue.js入門
〇ref関数
・reactで言うuseState(整数や文字列)、変数の更新状況をリアルタイムに反映させるための仕組み。
〇reactive関数
・reactで言うuseState(配列やオブジェクト)、ref関数とは違い、配列やオブジェクトの値を設定する。
〇setup関数
・変数やインポートファイルの宣言などを行う場所。
